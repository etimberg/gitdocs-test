{"initialProps":{"doc":{"name":"Introduction","path":"introduction","file":"docs/introduction.md","type":"file","body":"# Welcome to GitDocs\n\nEasy to use, SEO-friendly, beautiful documentation that lives in your git repo.\n\n## How does it work?\n\nIt turns markdown files in your `/docs` folder (or wherever you choose) into rich, interactive documentation. Out of the box you get helpers like syntax highlighting using [Prism](prismjs.com) or [Highlight.js](https://highlightjs.org/), callouts like [Tip](writing/helpers#tip), <Highlight>highlight</Highlight> and much more. You can even extend GitDocs to support custom components using libraries like React and Vue.\n\n`gitdocs` is distributed as a package on npm. It is a cli that you can simply install with `npm install gitdocs -g`. You can run `gitdocs serve` to preview your docs or `gitdocs build` to generate a static site wherever you like.\n\n## Installation\n\nUsing npm:\n\n```bash\nnpm i -g gitdocs\n```\n\nUsing Yarn:\n\n```bash\nyarn global add gitdocs\n```\n\n## Quick Start\n\nAssuming you have a folder with markdown files at `/docs`, you can automatically preview your docs site by running:\n\n```bash\ngitdocs serve\n```\n\nand build your site to any destination with:\n\n```bash\ngitdocs build --output=\"docs-dist\"\n```\n\n- The `readme.md` in your repo will be used as the default homepage for your docs\n- `docs/docs.json` allows you to specify your project settings like the version, name and much more\n- The navigation will automatically be built using your docs folder structure, but you can override this in `docs.json` to generate your own navigation."}}}